{"version":3,"sources":["./src/environments/environment.ts","./src/app/todo/todo.component.html","./src/app/todo/todo.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/todo/services/todo.services.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<form class=\"add-new-todo\" action=\"#\">\n  <input class=\"add-new-todo__field\" type=\"text\" placeholder=\"add new todo\" [(ngModel)]=\"newTodo\" name=\"new todo\">\n  <button class=\"add-new-todo__btn\" type=\"submit\" (click)=\"create()\">add</button>\n</form>\n<ul class=\"todo-list\">\n  <li class=\"todo-list__item\" *ngFor=\"let todo of todos\" (click)=\"deleteTodo(todo.id)\">\n    {{todo.title}}\n    <span class=\"todo-list__date\">{{todo.createdAt | date:'dd MMMM yyyy'}}</span>\n    <span [ngClass]=\"{'new': todo.status === 'new', 'done' : todo.status === 'done'}\">\n      {{todo.status}}\n    </span>\n  </li>\n</ul>\n<button type=\"button\" class=\"filterBtn\" (click)=\"fitlerByStatusDone()\">Filter by status done</button>\n<button type=\"button\" class=\"filterBtn\" (click)=\"fitlerByStatusNew()\">Filter by status new</button>\n<button type=\"button\" class=\"filterBtn\" (click)=\"reset()\">Reset</button>\n<div>\n  <h3>Sort by date</h3>\n  <button type=\"button\" class=\"filterBtn\" (click)=\"sortByNew()\">↑</button>\n  <button type=\"button\" class=\"filterBtn\" (click)=\"sortByOld()\">↓</button>\n</div>\n<form class=\"add-new-todo\" action=\"#\">\n  <input class=\"add-new-todo__field\" type=\"text\" placeholder=\"search by title\" name=\"search title\" (change)=\"filterByTitle($event)\">\n</form>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Todo, TodoServices} from \"./services/todo.services\";\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\nexport class TodoComponent implements OnInit {\n  newTodo = '';\n  public todos!: Todo[];\n\n  constructor(private todoService: TodoServices) {}\n\n  getAll(): Todo[] {\n    return this.todoService.getAll();\n  }\n\n  fitlerByStatusNew() {\n    this.todos = this.todoService.fitlerByStatusNew();\n  }\n\n  fitlerByStatusDone() {\n    this.todos = this.todoService.fitlerByStatusDone();\n  }\n\n  sortByNew() {\n    this.todos = this.todoService.sortByNew()\n  }\n\n  sortByOld() {\n    this.todos = this.todoService.sortByOld()\n  }\n\n  reset() {\n    this.todos = this.todoService.getAll();\n  }\n\n  create() {\n    const title = this.newTodo.trim();\n    if (title) {\n      this.todoService.create(title);\n      this.newTodo = '';\n    }\n  }\n\n  deleteTodo(id: number) {\n    this.todoService.changeStatus(id);\n  }\n\n  filterByTitle(event: any) {\n    this.todos = this.todoService.filterByTitle(event.target.value);\n  }\n\n  ngOnInit(): void {\n    this.todos = this.todoService.getAll();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-todo';\n}\n","<app-todo></app-todo>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport {TodoServices} from \"./todo/services/todo.services\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\n\nexport enum Status {\n  NEW = 'new',\n  DONE = 'done'\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  status: Status;\n  createdAt: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TodoServices {\n  todos: Todo[] = [\n    {\n      id: 1,\n      title: 'to make a coffee',\n      status: Status.NEW,\n      createdAt: new Date('2021-05-01')\n    },\n    {\n      id: 2,\n      title: 'to work',\n      status: Status.NEW,\n      createdAt: new Date('2021-05-02')\n    },\n    {\n      id: 3,\n      title: 'to feed a dog',\n      status: Status.NEW,\n      createdAt: new Date('2021-05-03')\n    },\n    {\n      id: 4,\n      title: 'to drip eyes',\n      status: Status.NEW,\n      createdAt: new Date('2021-05-04')\n    }\n  ];\n\n  getAll(): Todo[] {\n    return this.todos;\n  }\n\n  fitlerByStatusDone() {\n    return this.todos.filter(status => {\n      return status.status === Status.DONE;\n    });\n  }\n\n  fitlerByStatusNew() {\n    return this.todos.filter(status => {\n      return status.status === Status.NEW;\n    });\n  }\n\n  create(title: string): void {\n    this.todos.push({\n      id: this.todos.length + 1,\n      title,\n      status: Status.NEW,\n      createdAt: new Date()\n    });\n  }\n\n  changeStatus(id: number) {\n    const founded = this.todos.find((item) => {\n      return item.id === id;\n    });\n\n    if (founded) {\n      founded.status = Status.DONE;\n    }\n  }\n\n  sortByNew() {\n    const cloned = [...this.todos]\n    return cloned.sort((a, b) => {\n      return <any>new Date(a.createdAt) - <any>new Date(b.createdAt);\n    })\n  }\n\n  sortByOld() {\n    const cloned = [...this.todos]\n    return cloned.sort((a, b) => {\n      return <any>new Date(b.createdAt) - <any>new Date(a.createdAt);\n    })\n  }\n\n  filterByTitle(title:string) {\n    return this.todos.filter(todo => {\n     return todo.title.toLowerCase().includes(title.toLowerCase().trim());\n    })\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}